const console = require('./logger.js');
const conf = require('./configuration.js');
let VCAP_SERVICES = {};

module.exports.init = (env = {VCAP_SERVICES: '{}'}) => {
    VCAP_SERVICES = JSON.parse(env.VCAP_SERVICES || '{}');
    console.debug('Initial VCAP_SERVICES', JSON.stringify(VCAP_SERVICES));
};

module.exports.apply = (env) => {
    env.VCAP_SERVICES = JSON.stringify(VCAP_SERVICES);
    console.debug('New VCAP_SERVICES applied', VCAP_SERVICES);
};

module.exports.has = service => !!VCAP_SERVICES[service];

module.exports.get = service => VCAP_SERVICES[service] && VCAP_SERVICES[service][0];

module.exports.getSapCloudService = sapCloudService => (Object.values(VCAP_SERVICES).find(
    ([binding]) => binding && binding.credentials && binding.credentials['sap.cloud.service'] === sapCloudService
) || [])[0];

module.exports.add = ({
    service,
    plan = 'default',
    credentials = undefined,
    tags = [],
    sapCloudService = undefined,
    grantType = undefined,
    appHostId = undefined,
    endpoints = undefined
}) => {
    const uaaCredentials = credentials || {
        'clientid': 'mock_client_id',
        'clientsecret': 'mock_client_secret',
        'identityzone': 'mock_idz',
        'instanceid': '12345678-1234-1234-1234-123456789abc',
        'tenantid': '12345678-1234-1234-1234-123456789abc',
        'tenantmode': 'dedicated',
        'uaadomain': `localhost:${conf.port}`,
        'uri': `http://localhost:${conf.port}`,
        'url': `http://localhost:${conf.port}`,
        'verificationkey': '-----BEGIN PUBLIC KEY-----***-----END PUBLIC KEY-----',
        'xsappname': 'mock_xsappname'
    };
    if (!VCAP_SERVICES[service]) {
        VCAP_SERVICES[service] = [];
    }
    VCAP_SERVICES[service][0] = {
        'binding_name': null,
        'credentials': sapCloudService ? {
            'html5-apps-repo': appHostId && {
                'app_host_id': appHostId
            },
            'endpoints': endpoints,
            'grant_type': grantType,
            'sap.cloud.service': sapCloudService,
            'uaa': uaaCredentials,
            'uri': `http://localhost:${conf.port}`,
            'vendor': 'SAP'
        } : uaaCredentials,
        'instance_name': service,
        'label': service,
        'name': service,
        'plan': plan,
        'provider': null,
        'syslog_drain_url': null,
        'tags': tags,
        'volume_mounts': []
    };
    console.debug(`Service binding for '${service}' added`, VCAP_SERVICES[service][0]);
};

module.exports.middleware = (url, env) => function vcapMiddleware(req, res, next) {
    if (req.url === url) {
        console.debug(`Returning env.VCAP_SERVICES (x-correlationid: ${req.headers['x-correlationid']})`);
        res.setHeader('Content-Type', 'application/json');
        return res.end(env.VCAP_SERVICES);
    }
    return next();
};
