'use strict';

const tracer      = require('../utils/logger').getTracer(__filename);
const iasUtils    = require('../utils/ias-utils');
const urlUtils    = require('../utils/url-utils');
const uaaUtils    = require('../utils/uaa-utils');
const configUtils = require('../utils/configuration-utils');

module.exports = function attachZoneInfo(req, res, next) {
  let routerConfig = req && req.app && req.app.get('mainRouterConfig');
  let iasConfig = req.extIasConfigOptions || (routerConfig && routerConfig.iasConfig && routerConfig.iasConfig.options);
  if (!iasConfig || !iasConfig.domain || req.zoneInfo) {
    return next();
  }
  let uaadomain = routerConfig.uaaConfig && routerConfig.uaaConfig.options && routerConfig.uaaConfig.options.uaadomain;
  let tenant = null;
  if (process.env.TENANT_HOST_PATTERN) {
    const tenantHostPattern = configUtils.constructRegExp(process.env.TENANT_HOST_PATTERN);
    if (!tenantHostPattern) {
      return next('Failed to extract tenant host pattern');
    }
    let requestHost = urlUtils.getAppRouterHost(req);
    tenant = uaaUtils.retrieveTenantFromURL (requestHost, tenantHostPattern);
  }
  iasUtils.getZoneInfo(tenant,iasConfig,uaadomain, (err, zoneInfo) => {
    if (err){
      return next(err);
    }
    if (zoneInfo) {
      req.zoneInfo = zoneInfo;
      tracer.info('Zone info found ' + JSON.stringify(zoneInfo));
    }
    next();
  });
};

