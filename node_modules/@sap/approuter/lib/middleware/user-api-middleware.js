'use strict';

const jwtDecode = require('jwt-decode');

module.exports = function getUserDetails(req, res, next) {

  if (req.internalUrl && req.internalUrl.route && req.internalUrl.route.service
      && req.internalUrl.route.service === 'sap-approuter-userapi'
      && req.session && req.session.user && req.session.user.token
      && req.session.user.token.accessToken) {
    let endPoint = null;
    if (req.url.endsWith('currentUser')) {
      endPoint = 'currentUser';
    } else if (req.url.endsWith('attributes')) {
      endPoint = 'attributes';
    } else {
      return next('Invalid user API endpoint provided');
    }
    let decodedToken = null;
    try {
      decodedToken = jwtDecode(req.session.user.token.accessToken);
    } catch (err) {
      return next('Failed to decode login token ' + err);
    }
    const userDetails = {
      firstname: decodedToken.given_name,
      lastname: decodedToken.family_name,
      email: decodedToken.email || decodedToken.name,
      name: decodedToken.user_name || decodedToken.email
    };
    if (endPoint === 'currentUser') {
      userDetails.displayName = userDetails.firstname && userDetails.lastname ?
      // eslint-disable-next-line max-len
        userDetails.firstname + ' ' + userDetails.lastname + ' (' + userDetails.name + ')'
        : userDetails.name;
    }
    const response = JSON.stringify(userDetails, undefined, 2);
    res.end(response);
  } else {
    next();
  }
};
